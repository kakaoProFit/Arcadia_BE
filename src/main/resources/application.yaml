#spring:
#  profiles:
#    default: dev # 기본 환경을 dev로
#
#  application:
#    name: Arcadia
#
#  cloud:
#    aws:
#      region:
#        static: us-east-1 #gunminu
#      #        static: us-northeast-2
#      credentials:
#        access-key: AKIAYULU4KVEB2PRPDJR #gunminu
#        #        access-key: AKIA6JHGVMBAWPG7Y2P4
#        secret-key: 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 #gunminu
#      s3:
#        bucket: arcadia-image #gunminu
#  #        bucket: arcadia-profit-2
#  #        folder: profile-image #프로필 사진 외 파일을 저장할 때 수정해야됨
#
#
#  main:
#    allow-bean-definition-overriding: true #MONGODB 오류로 임시 추가
#
#
#  jpa:
#    show-sql: true
#    properties:
#      hibernate:
#        format_sql: true
#        dialect: org.hibernate.dialect.MariaDBDialect
#    defer-datasource-initialization: true
#    hibernate:
#      ddl-auto: update
#    open-in-view: true
#
##  # Master (Write) Database
##  datasource:
##    master:
##      url: jdbc:mariadb://profit-rdb-master.chke6w2cu29b.ap-northeast-2.rds.amazonaws.com:3306/arcadia
##      username: admin
##      password: 1q2w3e4r
##
##    # Slave (Read) Databases
##    slave1:
##      url: jdbc:mariadb://profit-rdb-slave1.chke6w2cu29b.ap-northeast-2.rds.amazonaws.com:3306/arcadia
##      username: admin
##      password: 1q2w3e4r
##
##    slave2:
##      url: jdbc:mariadb://profit-rdb-slave2.chke6w2cu29b.ap-northeast-2.rds.amazonaws.com:3306/arcadia
##      username: admin
##      password: 1q2w3e4r
#
#  datasource:
#    url: jdbc:mariadb://35.216.99.76:3306/test
#    username: test
#    password: test
#    #    url: jdbc:mariadb://mariadb:3306/arcadia
#    #    username: profit
#    #    password: vmfhvlt!
#
#    driver-class-name: org.mariadb.jdbc.Driver
#  security:
#    oauth2:
#      client:
#        registration:
#          naver:
#            client-id: 3rVboUvxEZ7HwQuY30OB
#            client-secret: 4vVsarkBmq
#            client-authentication-method: client_secret_post
#            authorization-grant-type: authorization_code
#            redirect-uri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
#            scope:
#              - name
#              - email
#              - profile_image
#            client-name: Naver
#          kakao:
#            client-id: 0c1ede23c3f7062dad95583783c87699
#            client-secret: JfyJ3ZXursQ1SnQv8jUB4IWbyg7zNg2J
#            client-authentication-method: client_secret_post
#            authorization-grant-type: authorization_code
#            scope:
#              - profile_nickname
#              - profile_image
#              - account_email
#            redirect-uri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
#            client-name: Kakao
#        provider:
#          naver:
#            authorization-uri: https://nid.naver.com/oauth2.0/authorize
#            token-uri: https://nid.naver.com/oauth2.0/token
#            user-info-uri: https://openapi.naver.com/v1/nid/me
#            user-info-authentication-method: header
#            user-name-attribute: response
#          kakao:
#            authorization-uri: https://kauth.kakao.com/oauth/authorize
#            token-uri: https://kauth.kakao.com/oauth/token
#            user-info-uri: https://kapi.kakao.com/v2/user/me
#            user-info-authentication-method: header
#            user-name-attribute: id
#  mail:
#    host: smtp.gmail.com
#    port: 587
#    username: gwanilgim632@gmail.com
#    password: awlhveeywrshjtwb
#    properties:
#      mail.smtp.auth: true
#      mail.smtp.starttls.enable: true
#  data:
#    redis:
#      host: localhost
#      port: 6379
#      password: 1234
#    #      host: redis-master
#    #      port: 6379
#    #      password: LJ8lKmQRH1
#    mongodb:
#      #      host: localhost
#      #      port: 27017
#      #      authentication-database: admin
#      #      database: test
#      #      username: test
#      #      password: 1111
#      database : test
#      uri: mongodb+srv://test:1111@cluster0.hcj9xiu.mongodb.net/test?retryWrites=true&w=majority&appName=Cluster0
#
#
#
#  mvc:
#    pathmatch:
#      matching-strategy: ant_path_matcher
#
#
#
#
#
#security:
#  jwt:
#    secret-key: 3cfa76ef14937c1c0ea519f8fc057a80fcd04a7420f8e8bcd0a7567c272e007b
#    expiration-time: 3600000
#    refresh-token-expiration-time: 604800000
#    refresh-expiration-time: 60480000
#
#logging:
#  level:
#    profit.login.jwt: DEBUG
#
#server:
#  port: 8080
#
#management:
#  endpoints:
#    web:
#      exposure:
#        include: "*"
#
#springdoc:
#  swagger-ui:
#    disable-swagger-default-url: true   #디폴트 페이지 안나오게
#    path: /api-ui.html
#  api-docs:
#    path: /v3/api-docs  # Base URL을 /v3/api-docs로 설정
#  show-actuator: true
#  default-produces-media-type: application/json

spring:
  profiles:
    default: dev # 기본 환경을 dev로

  application:
    name: Arcadia

  cloud:
    aws:
      region:
        static: us-east-1 #gunminu
      #        static: us-northeast-2
      credentials:
        access-key: AKIAYULU4KVEB2PRPDJR #gunminu
        #        access-key: AKIA6JHGVMBAWPG7Y2P4
        secret-key: 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 #gunminu
      s3:
        bucket: arcadia-image #gunminu
  #        bucket: arcadia-profit-2
  #        folder: profile-image #프로필 사진 외 파일을 저장할 때 수정해야됨


  main:
    allow-bean-definition-overriding: true #MONGODB 오류로 임시 추가


  jpa:
    show-sql: true
    properties:
      hibernate:
        format_sql: true
    defer-datasource-initialization: true
    hibernate:
      ddl-auto: update
    open-in-view: true
  datasource:
   url: jdbc:mariadb://35.216.99.76:3306/test1
   username: test
   password: test


#    url: jdbc:mariadb://mariadb-galera:3306/arcadia
#    username: profit
#    password: vmfhvlt!
  driver-class-name: org.mariadb.jdbc.Driver
  security:
    oauth2:
      client:
        registration:
          naver:
            client-id: 3rVboUvxEZ7HwQuY30OB
            client-secret: 4vVsarkBmq
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
            scope:
              - name
              - email
              - profile_image
            client-name: Naver
          kakao:
            client-id: 0c1ede23c3f7062dad95583783c87699
            client-secret: JfyJ3ZXursQ1SnQv8jUB4IWbyg7zNg2J
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            scope:
              - profile_nickname
              - profile_image
              - account_email
            redirect-uri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
            client-name: Kakao
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-info-authentication-method: header
            user-name-attribute: response
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-info-authentication-method: header
            user-name-attribute: id
  mail:
    host: smtp.gmail.com
    port: 587
    username: gwanilgim632@gmail.com
    password: awlhveeywrshjtwb
    properties:
      mail.smtp.auth: true
      mail.smtp.starttls.enable: true
  data:
    redis:

#      host: localhost
#      port: 6379
#      password: 1234
#       host: redis-master
#       port: 6379
#       password: oIrVzIbmTX

      host: 210.109.55.154
      port: 6379
      password: vmfhvlt!
      #host: localhost
      #ppassword: 1234
#      host: redis-master
#      port: 6379
#      password: vmfhvlt!
      #host: redis
      #port: 6379
      #password: 1234
    mongodb:
      #      host: localhost
      #      port: 27017
      #      authentication-database: admin
      #      database: test
      #      username: test
      #      password: 1111
      database : test
      uri: mongodb+srv://test:1111@cluster0.hcj9xiu.mongodb.net/test?retryWrites=true&w=majority&appName=Cluster0


  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher

security:
  jwt:
    secret-key: 3cfa76ef14937c1c0ea519f8fc057a80fcd04a7420f8e8bcd0a7567c272e007b
    expiration-time: 3600000
    refresh-token-expiration-time: 604800000
    refresh-expiration-time: 60480000

logging:
  level:
    profit.login.jwt: DEBUG

server:
  port: 8000

management:
  endpoints:
    web:
      exposure:
        include: "*"

springdoc:
  swagger-ui:
    disable-swagger-default-url: true   #디폴트 페이지 안나오게
    path: /api-ui.html
  api-docs:
    path: /v3/api-docs  # Base URL을 /v3/api-docs로 설정
  show-actuator: true
  default-produces-media-type: application/json
